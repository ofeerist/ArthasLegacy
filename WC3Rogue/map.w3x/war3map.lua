gg_rct_NextRoom = nil
gg_rct_PlayerStart = nil
gg_snd_GameFound = nil
gg_snd_InviteToGame = nil
gg_snd_QuestCheckpoint = nil
gg_snd_Credits = nil
gg_snd_HumanDefeat = nil
gg_snd_CreepAggroWhat1 = nil
gg_snd_MouseClick2 = nil
function InitGlobals()
end

function InitSounds()
gg_snd_GameFound = CreateSound("Sound/Interface/GameFound.flac", false, false, false, 1, 1, "SpellsEAX")
SetSoundParamsFromLabel(gg_snd_GameFound, "GameFound")
SetSoundDuration(gg_snd_GameFound, 7488)
SetSoundVolume(gg_snd_GameFound, 127)
gg_snd_InviteToGame = CreateSound("Sound/Interface/InviteToGame.flac", false, false, false, 1, 1, "SpellsEAX")
SetSoundParamsFromLabel(gg_snd_InviteToGame, "InviteToGame")
SetSoundDuration(gg_snd_InviteToGame, 4040)
SetSoundVolume(gg_snd_InviteToGame, 127)
gg_snd_QuestCheckpoint = CreateSound("UI/Feedback/CheckpointPopup/QuestCheckpoint.flac", false, false, false, 0, 0, "DefaultEAXON")
SetSoundParamsFromLabel(gg_snd_QuestCheckpoint, "QuestCheckpoint")
SetSoundDuration(gg_snd_QuestCheckpoint, 3039)
SetSoundVolume(gg_snd_QuestCheckpoint, 64)
gg_snd_Credits = CreateSound("Sound/Music/mp3Music/Credits.flac", false, false, false, 0, 0, "DefaultEAXON")
SetSoundParamsFromLabel(gg_snd_Credits, "CreditsMusic")
SetSoundDuration(gg_snd_Credits, 83017)
SetSoundVolume(gg_snd_Credits, 120)
gg_snd_HumanDefeat = CreateSound("Sound/Music/mp3Music/HumanDefeat.flac", false, true, true, 0, 0, "MissilesEAX")
SetSoundParamsFromLabel(gg_snd_HumanDefeat, "HumanDefeat")
SetSoundDuration(gg_snd_HumanDefeat, 46567)
SetSoundChannel(gg_snd_HumanDefeat, 11)
SetSoundVolume(gg_snd_HumanDefeat, 127)
SetSoundDistances(gg_snd_HumanDefeat, 600.0, 3500.0)
SetSoundDistanceCutoff(gg_snd_HumanDefeat, 3000.0)
gg_snd_CreepAggroWhat1 = CreateSound("Sound/Interface/CreepAggroWhat1.flac", false, false, false, 0, 0, "DefaultEAXON")
SetSoundParamsFromLabel(gg_snd_CreepAggroWhat1, "CreepAggro")
SetSoundDuration(gg_snd_CreepAggroWhat1, 1784)
SetSoundVolume(gg_snd_CreepAggroWhat1, 127)
gg_snd_MouseClick2 = CreateSound("Sound/Interface/MouseClick2.flac", false, false, false, 0, 0, "DefaultEAXON")
SetSoundParamsFromLabel(gg_snd_MouseClick2, "InterfaceClick2")
SetSoundDuration(gg_snd_MouseClick2, 230)
SetSoundVolume(gg_snd_MouseClick2, 127)
end

function CreateBuildingsForPlayer0()
local p = Player(0)
local u
local unitID
local t
local life

u = BlzCreateUnitWithSkin(p, FourCC("hbla"), 10304.0, 12032.0, 270.000, FourCC("hbla"))
end

function CreateBuildingsForPlayer1()
local p = Player(1)
local u
local unitID
local t
local life

u = BlzCreateUnitWithSkin(p, FourCC("hbla"), 10688.0, 12032.0, 270.000, FourCC("hbla"))
end

function CreateBuildingsForPlayer2()
local p = Player(2)
local u
local unitID
local t
local life

u = BlzCreateUnitWithSkin(p, FourCC("hbla"), 10304.0, 11648.0, 270.000, FourCC("hbla"))
end

function CreateBuildingsForPlayer3()
local p = Player(3)
local u
local unitID
local t
local life

u = BlzCreateUnitWithSkin(p, FourCC("hbla"), 10688.0, 11648.0, 270.000, FourCC("hbla"))
end

function CreateNeutralPassiveBuildings()
local p = Player(PLAYER_NEUTRAL_PASSIVE)
local u
local unitID
local t
local life

u = BlzCreateUnitWithSkin(p, FourCC("nmrk"), 11264.0, 11456.0, 270.000, FourCC("nmrk"))
SetUnitColor(u, ConvertPlayerColor(0))
u = BlzCreateUnitWithSkin(p, FourCC("ngme"), 11264.0, 11840.0, 270.000, FourCC("ngme"))
u = BlzCreateUnitWithSkin(p, FourCC("nmoo"), 12160.0, 11968.0, 270.000, FourCC("nmoo"))
u = BlzCreateUnitWithSkin(p, FourCC("nfoh"), 11648.0, 11968.0, 270.000, FourCC("nfoh"))
end

function CreateNeutralPassive()
local p = Player(PLAYER_NEUTRAL_PASSIVE)
local u
local unitID
local t
local life

u = BlzCreateUnitWithSkin(p, FourCC("zcso"), 11048.9, 12285.5, 339.005, FourCC("zcso"))
u = BlzCreateUnitWithSkin(p, FourCC("nvlw"), 11456.2, 11842.0, 55.472, FourCC("nvlw"))
u = BlzCreateUnitWithSkin(p, FourCC("nvk2"), 11472.3, 11718.6, 273.909, FourCC("nvk2"))
u = BlzCreateUnitWithSkin(p, FourCC("nvl2"), 11453.0, 11383.3, 70.073, FourCC("nvl2"))
u = BlzCreateUnitWithSkin(p, FourCC("nvil"), 11428.5, 11491.1, 294.454, FourCC("nvil"))
u = BlzCreateUnitWithSkin(p, FourCC("nvlk"), 11492.8, 11688.5, 165.833, FourCC("nvlk"))
u = BlzCreateUnitWithSkin(p, FourCC("zzrg"), 11089.3, 11365.1, 74.116, FourCC("zzrg"))
end

function CreatePlayerBuildings()
CreateBuildingsForPlayer0()
CreateBuildingsForPlayer1()
CreateBuildingsForPlayer2()
CreateBuildingsForPlayer3()
end

function CreatePlayerUnits()
end

function CreateAllUnits()
CreateNeutralPassiveBuildings()
CreatePlayerBuildings()
CreateNeutralPassive()
CreatePlayerUnits()
end

function CreateRegions()
local we

gg_rct_NextRoom = Rect(11616.0, 11840.0, 12224.0, 12288.0)
gg_rct_PlayerStart = Rect(11616.0, 11360.0, 12192.0, 11776.0)
end

--CUSTOM_CODE
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 19:45
---
currentLevel = 0
database = {
    {
        gridSize = 2,
        gold = 500,
        wood = 300,
        bandits = {
            {
                { id = 'ncfs', min = 1, max = 2 },
            },
            {
                { id = 'nsca', min = 1, max = 3 },
            },
            {
                { id = 'nglm', min = 1, max = 3 },
            },
            {
                { id = 'ndrl', min = 1, max = 2 },
            },
            {
                { id = 'npng', min = 1, max = 1 },
            },
            {
                { id = 'ndog', min = 1, max = 1 },
            },
            {
                { id = 'nrat', min = 5, max = 10 },
            },
        },
        altar = {
            {
                { id = 'ndrj', min = 1, max = 1 },
            },
            {
                { id = 'nsca', min = 1, max = 1 },
            },
            {
                { id = 'ndrl', min = 1, max = 1 },
            }
        }
    },
    {
        gridSize = 3,
        gold = 800,
        wood = 500,
        bandits = {
            {
                { id = 'ncfs', min = 2, max = 4 },
            },
            {
                { id = 'nsca', min = 3, max = 5 },
            },
            {
                { id = 'nglm', min = 2, max = 4 },
            },
            {
                { id = 'ndrl', min = 2, max = 3 },
            }
        },
        altar = {
            {
                { id = 'ndrj', min = 1, max = 2 },
            },
            {
                { id = 'nsca', min = 1, max = 2 },
            },
            {
                { id = 'ndrl', min = 1, max = 2 },
            }
        }
    },
    {
        gridSize = 3,
        gold = 1000,
        wood = 700,
        bandits = {
            {
                { id = 'ncfs', min = 2, max = 4 },
            },
            {
                { id = 'nsca', min = 3, max = 5 },
            },
            {
                { id = 'nglm', min = 2, max = 4 },
            },
            {
                { id = 'ndrl', min = 2, max = 3 },
            }
        },
        altar = {
            {
                { id = 'ndrj', min = 2, max = 5 },
            },
            {
                { id = 'nsca', min = 2, max = 5 },
            },
            {
                { id = 'ndrl', min = 2, max = 5 },
            }
        }
    },
    {
        gridSize = 4,
        gold = 2000,
        wood = 1500,
        bandits = {
            {
                { id = 'ncfs', min = 2, max = 4 },
            },
            {
                { id = 'nsca', min = 3, max = 5 },
            },
            {
                { id = 'nglm', min = 2, max = 4 },
            },
            {
                { id = 'ndrl', min = 2, max = 3 },
            }
        },
        altar = {
            {
                { id = 'ninf', min = 1, max = 1 },
            },
            {
                { id = 'nbal', min = 1, max = 1 },
            },
            {
                { id = 'nskf', min = 1, max = 3 },
            }
        }
    },
    {
        gridSize = 5,
        gold = 3000,
        wood = 1500,
        bandits = {
            {
                { id = 'nrog', min = 2, max = 8 },
                { id = 'nass', min = 0, max = 6 },
                { id = 'nenf', min = 0, max = 5 },
                { id = 'nbld', min = 1, max = 3 },
            },
            {
                { id = 'nanw', min = 1, max = 5 },
                { id = 'nanm', min = 0, max = 4 },
                { id = 'nano', min = 1, max = 6 },
            },
            {
                { id = 'ncer', min = 1, max = 5 },
                { id = 'ncea', min = 0, max = 4 },
                { id = 'ncks', min = 1, max = 5 },
            },
            {
                { id = 'ndrf', min = 2, max = 3 },
                { id = 'ndrw', min = 0, max = 6 },
                { id = 'ndrd', min = 0, max = 4 },
            }
        },
        altar = {
            {
                { id = 'ncer', min = 1, max = 5 },
                { id = 'ncea', min = 0, max = 4 },
                { id = 'ncks', min = 1, max = 5 },
            },
            {
                { id = 'ndrf', min = 2, max = 3 },
                { id = 'ndrw', min = 0, max = 6 },
                { id = 'ndrd', min = 0, max = 4 },
            },
            {
                { id = 'nskf', min = 3, max = 5 },
            }
        }
    },
    {
        gridSize = 6,
        gold = 5000,
        wood = 5000,
        bandits = {
            {
                { id = 'nrog', min = 2, max = 8 },
                { id = 'nass', min = 0, max = 7 },
                { id = 'nenf', min = 0, max = 7 },
                { id = 'nbld', min = 3, max = 3 },
            },
            {
                { id = 'nanw', min = 1, max = 9 },
                { id = 'nanm', min = 0, max = 9 },
                { id = 'nano', min = 1, max = 5 },
            },
            {
                { id = 'ncer', min = 1, max = 9 },
                { id = 'ncea', min = 0, max = 9 },
                { id = 'ncks', min = 1, max = 5 },
            },
            {
                { id = 'ndrf', min = 2, max = 9 },
                { id = 'ndrw', min = 0, max = 5 },
                { id = 'ndrd', min = 0, max = 5 },
            }
        },
        altar = {
            {
                { id = 'ncer', min = 1, max = 9 },
                { id = 'ncea', min = 0, max = 9 },
                { id = 'ncks', min = 1, max = 5 },
            },
            {
                { id = 'nrog', min = 2, max = 8 },
                { id = 'nass', min = 0, max = 7 },
                { id = 'nenf', min = 0, max = 7 },
                { id = 'nbld', min = 3, max = 3 },
            },
            {
                { id = 'nskf', min = 3, max = 5 },
            }
        }
    }
}
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 19.02.2023 1:16
---

dropDatabase = {
    {
        id = 'B001',
        drops = {
            {
                drop='belv'
            },
            {
                drop='ratc'
            },
            {
                drop='rde3'
            },
            {
                drop='rwiz'
            },
            {
                drop='gcel'
            },
            {
                drop='bgst'
            },
            {
                drop='hval'
            },
            {
                drop='odef'
            },
            {
                drop='ward'
            },
            {
                drop='penr'
            },
            {
                drop='pmna'
            },
            {
                drop='rag1'
            },
            {
                drop='wild'
            },
            {
                drop='ankh'
            },
            {
                drop='pnvu'
            },
            {
                drop='hlst'
            },
            {
                drop='shar'
            },
            {
                drop='fgdg'
            },
            {
                drop='totw'
            },
            {
                drop='fgfh'
            },
            {
                drop='rej3'
            },
            {
                drop='ratf'
            },
            {
                drop='modt'
            },
            {
                drop='ckng'
            }
        },
    },
    {
        id = 'B007',
        drops = {
            {
                drop='shhn'
            },
            {
                drop='engr'
            },
            {
                drop='sksh'
            },
            {
                drop='shdt'
            },
            {
                drop='rugt'
            },
            {
                drop='ckng'
            },
            {
                drop='rag1'
            },
            {
                drop='hval'
            },
            {
                drop='rde3'
            },
            {
                drop='rde2'
            },
            {
                drop='rwiz'
            },
            {
                drop='brac'
            },
        }
    },
    {
        id = 'B006',
        drops = {
            {
                drop = 'ratc'
            },
            {
                drop = 'rat6'
            },
            {
                drop = 'rat9'
            },
            {
                drop = 'rst1'
            },
            {
                drop = 'gcel'
            },
            {
                drop = 'afac'
            },
            {
                drop = 'ratf'
            },
            {
                drop = 'desc'
            },
            {
                drop = 'frgd'
            },
            {
                drop = 'srbd'
            },
            {
                drop = 'rump'
            },
            {
                drop = 'ccmd'
            },
            {
                drop = 'schl'
            },
            {
                drop = 'rots'
            },

        }
    },
    {
        id = 'B000',
        drops = {
            {
                drop='wneu'
            },
            {
                drop='wneg'
            },
            {
                drop='pclr'
            },
            {
                drop='pinv'
            },
            {
                drop='hslv'
            },
            {
                drop='stwp'
            },
            {
                drop='sreg'
            },
            {
                drop='shas'
            },
            {
                drop='tret'
            },
            {
                drop='pnvl'
            },
            {
                drop='plcl'
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },{
                drop=''
            },{
                drop=''
            },{
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },{
                drop=''
            },{
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
        }
    },
    {
        id = 'B004',
        drops = {
            {
                drop='wneu'
            },
            {
                drop='wneg'
            },
            {
                drop='pclr'
            },
            {
                drop='pinv'
            },
            {
                drop='hslv'
            },
            {
                drop='stwp'
            },
            {
                drop='sreg'
            },
            {
                drop='shas'
            },
            {
                drop='tret'
            },
            {
                drop='pnvl'
            },
            {
                drop='plcl'
            }
        }
    },
    {
        id = 'B008',
        drops = {
            {
                drop='wneu'
            },
            {
                drop='wneg'
            },
            {
                drop='pclr'
            },
            {
                drop='pinv'
            },
            {
                drop='hslv'
            },
            {
                drop='stwp'
            },
            {
                drop='sreg'
            },
            {
                drop='shas'
            },
            {
                drop='tret'
            },
            {
                drop='pnvl'
            },
            {
                drop='plcl'
            }
        }
    },
    {
        id = 'B009',
        drops = {
            {
                drop='wneu'
            },
            {
                drop='wneg'
            },
            {
                drop='pclr'
            },
            {
                drop='pinv'
            },
            {
                drop='hslv'
            },
            {
                drop='stwp'
            },
            {
                drop='sreg'
            },
            {
                drop='shas'
            },
            {
                drop='tret'
            },
            {
                drop='pnvl'
            },
            {
                drop='plcl'
            }
        }
    },
    {
        id = 'LTcr',
        drops = {
            {
                drop='lmbr'
            },
            {
                drop='lmbr'
            },
            {
                drop='lmbr'
            },
            {
                drop='lmbr'
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            }
        }
    },
    {
        id = 'B003',
        drops = {
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop='gold'
            },
            {
                drop=''
            },
            {
                drop=''
            },
            {
                drop=''
            }
        }
    },
}

itemsCreated = {}
dropTrigger = nil
function DropOnKillStart()
    if (not dropTrigger == nil) then
        DropOnKillDestroy()
    end

    dropTrigger = CreateTrigger()
    TriggerAddAction(dropTrigger, OnDeathDrop)
end

function DropOnKillDestroy()
    DestroyTrigger(dropTrigger)
    dropTrigger = nil
end

function OnDeathDrop()

    local dest = GetTriggerDestructable()

    for i = 1, #dropDatabase do
        local key = dropDatabase[i]

        if (GetDestructableTypeId(dest) == FourCC(key.id)) then
            local drop = dropDatabase[i].drops[GetRandomInt(1, #dropDatabase[i].drops)].drop

            if (drop == '') then

            else
                item = CreateItem(FourCC(drop), GetDestructableX(dest), GetDestructableY(dest))
                table.insert(itemsCreated, item)
            end
        end

    end
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 19.02.2023 16:14
---
textFrame = nil
helpText = nil
timerTime = 15 * 60
timerTimer = nil
function DungeonTimerStart()
    helpText = BlzCreateFrameByType("TEXT", "ButtonChargesText", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
    BlzFrameSetAbsPoint(helpText, FRAMEPOINT_CENTER, 0.4, 0.17)
    BlzFrameSetText(helpText, "У вас еще есть время успеть выйти из подземелья!")
    BlzFrameSetScale(helpText, 1.6)

    textFrame = BlzCreateFrameByType("TEXT", "ButtonChargesText", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
    BlzFrameSetAbsPoint(textFrame, FRAMEPOINT_CENTER, 0.4, 0.2)
    BlzFrameSetText(textFrame, "")
    BlzFrameSetScale(textFrame, 2)

    timerTimer = CreateTimer()
    TimerStart(timerTimer, 1, true, function()
        timerTime = timerTime - 1
        BlzFrameSetText(textFrame, DecimalsToMinutes(timerTime))

        if (timerTime < 5 * 60) then
            PlaySound("Sound/Interface/MouseClick1.flac")
        elseif (timerTime < 10 * 60) then
            PlaySound("Sound/Interface/MouseClick2.flac")
        end

        if (timerTime <= 0) then
            for i = 0, 10 do
                RemovePlayerPreserveUnitsBJ(Player(i), PLAYER_GAME_RESULT_DEFEAT, false)
            end

            BlzFrameSetText(helpText, "У вас больше нет времени ((((")
            DestroyTimer(timerTimer)

            PlaySound("Sound/Music/mp3Music/HumanDefeat.flac")
        end
    end)
end

function WinTimer()
    for i = 0, 10 do
        RemovePlayerPreserveUnitsBJ(Player(i), PLAYER_GAME_RESULT_VICTORY, false)
    end

    BlzFrameSetText(helpText, "Вы успели!")
    DestroyTimer(timerTimer)

    PlaySound("Sound/Music/mp3Music/Credits.flac")
end

function DecimalsToMinutes(dec)
    local ms = tonumber(dec)
    return Zero(math.floor(ms / 60))..":"..Zero((ms % 60))
end

function Zero(s)
    local ns = ""
    if string.len(s) == 1 then
        ns = "0" .. s
    else
        ns = s
    end
    return ns
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 23:42
---
---
evolution = {
    {id = 'hfoo', text = "Пехотинец", require = "1"},
    {id = 'nban', text = "Бандит", require = "1"},
    {id = 'hcth', text = "Капитан", require = "11"},
    {id = 'hhes', text = "Мечник", require = "11"},
    {id = 'nbrg', text = "Грабитель", require = "12"},
    {id = 'nrog', text = "Разбойник", require = "12"},
    {id = 'hrif', text = "Стрелок", require = "111"},
    {id = 'njks', text = "Тюремщик", require = "111"},
    {id = 'hkni', text = "Рыцарь", require = "112"},
    {id = 'nwzr', text = "Непокорный маг", require = "112"},
    {id = 'nenf', text = "Головорез", require = "121"},
    {id = 'nwzw', text = "Чародей крови", require = "121"},
    {id = 'nass', text = "Убийца", require = "122"},
    {id = 'nwzw', text = "Чародей крови", require = "122"},
    {id = 'Hmkg', text = "Горный король", require = "1111"},
    {id = 'Hamg', text = "Верховный маг", require = "1112"},
    {id = 'Hlgr', text = "Гаритос", require = "1121"},
    {id = 'Hblm', text = "Маг крови", require = "1122"},
    {id = 'Nbrn', text = "Темный следопыт", require = "1211"},
    {id = 'Hblm', text = "Маг крови", require = "1212"},
    {id = 'Nbrn', text = "Темный следопыт", require = "1221"},
    {id = 'Hblm', text = "Маг крови", require = "1222"},
}
function NextEvolution(player)

    CreateEvolutionDialog(player, currentLevel)

end

currentEvolution = {}

function CreateNextUnit(player, rawcode)
    local id = GetPlayerId(player)
    local unit = playerUnits[id]
    local newUnit = nil

    if (playerUnits[id] == nil) then return end

    RemoveUnit(unit)

    newUnit = CreateUnit(player, FourCC(rawcode), GetUnitX(unit), GetUnitY(unit), GetUnitFacing(unit))
    SelectUnitForPlayerSingle(newUnit, player)
    UnitAddAbility(newUnit, FourCC('AInv'))
    UnitAddAbility(newUnit, FourCC('Asal'))

    if (IsHeroUnitId(FourCC(rawcode))) then
        AddHeroXP(newUnit, 99999, true)
    end

    UnitAddItem(newUnit, UnitItemInSlot(unit, 0))
    UnitAddItem(newUnit, UnitItemInSlot(unit, 1))
    UnitAddItem(newUnit, UnitItemInSlot(unit, 2))
    UnitAddItem(newUnit, UnitItemInSlot(unit, 3))
    UnitAddItem(newUnit, UnitItemInSlot(unit, 4))
    UnitAddItem(newUnit, UnitItemInSlot(unit, 5))

    playerUnits[id] = newUnit
end

function CreateEvolutionDialog(player, level)
    local id = GetPlayerId(player)

    local dialog = DialogCreate()

    local buttonCount = 0
    for i = 1, #evolution do
        if (evolution[i].require == playerChooses[id]) then
            buttonCount = buttonCount + 1

            local button = DialogAddButton(dialog, evolution[i].text, 0)
            local trigger = CreateTrigger()
            TriggerRegisterDialogButtonEvent(trigger, button)
            local count = buttonCount
            TriggerAddAction(trigger, function()

                playerChooses[id] = playerChooses[id] .. tostring(count)

                currentEvolution[id] = evolution[i].id
                CreateNextUnit(player, evolution[i].id)

                DestroyTrigger(trigger)
                DialogClear(dialog)
            end)
        end
    end

    if (buttonCount > 0) then
        DialogDisplay(player, dialog, true)
    end
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 21:31
---
---

exitTrigger = nil

function CreateExit(center)
    CreateFiller( 'OTsp', center.x,  center.y, 45, 1, 1)

    if (not exitTrigger == nil) then
        DestroyTrigger(exitTrigger)
        exitTrigger = nil
    end

    exitTrigger = CreateTrigger()
    TriggerRegisterEnterRectSimple(exitTrigger, Rect(center.x - semiGridScale - semiWidth, center.y - semiGridScale - semiWidth,
            center.x + semiGridScale - semiWidth, center.y + semiGridScale - semiWidth))
    TriggerAddAction(exitTrigger, ShowEndDialog)

    table.insert(triggersCreated, exitTrigger)
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 22:51
---

function LobbyStart()

    gameLobbyStart = CreateTrigger()

    TriggerRegisterEnterRectSimple(gameLobbyStart, gg_rct_NextRoom)
    TriggerAddAction(gameLobbyStart, ShowStartDialog)
end

function ShowStartDialog()
    if (GetOwningPlayer(GetTriggerUnit()) == mainPlayer) then

        local dialog = DialogCreate()
        DialogSetMessage(dialog, "Начать новый этаж?")
        local yes = DialogAddButton(dialog, "Да", 0)
        local no = DialogAddButton(dialog, "Нет", 0)

        DialogDisplay(mainPlayer, dialog, true)

        local yesTrigger = CreateTrigger()
        TriggerRegisterDialogButtonEvent(yesTrigger, yes)

        TriggerAddAction(yesTrigger, StartLevel)

    end
end

function StartLevel()
    GameStart()
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 17:55
---

function AngleBetweenXY(xa, ya, xb, yb)
    return math.atan(yb - ya, xb - xa)
end
local mod = {}
local aux = {}

aux.width = false
aux.height = false
aux.sx = false
aux.sy = false
aux.grid = false

aux.dirs = {"UP", "DOWN", "LEFT", "RIGHT"}

function aux.createGrid (rows, columns)
    local MazeGrid = {}

    for y = 1, rows do
        MazeGrid[y] = {}
        for x = 1, columns do
            MazeGrid[y][x] = {visited = false, bottom_wall = true, right_wall = true}
        end
    end
    return MazeGrid
end

function createMaze(x1, y1, x2, y2, grid)
    aux.width, aux.height, aux.sx, aux.sy = x2, y2, x1, y1
    aux.grid = grid or aux.createGrid(y2, x2)
    aux.wilson()
    return aux.grid
end

function aux.hashKey(x, y)
    return x * aux.height + (y - 1)
end

function aux.deHashKey(value)
    return math.floor(value/aux.height), value%aux.height + 1
end

function aux.hashCells(grid)
    local vtable = {}
    for yk, yv in pairs(grid) do
        for xk, xv in pairs(yv) do
            if xv.visited == false then
                vtable[aux.hashKey(xk, yk)] = xv
            end
        end
    end
    return vtable
end

function aux.wilson()
    local cellsHash = aux.hashCells(aux.grid) -- Вершины, не находящиеся в дереве

    local dirsStack = {} -- Стак направлений
    local dsHash = {}
    local dsSize = 0

    -- Создаем дерево
    local key, v = next(cellsHash, nil)
    v.visited = true
    cellsHash[key] = nil

    while next(cellsHash) do -- Пока есть необработанные вершины, работает
        key = next(cellsHash, nil) -- Получаем ключ и по нему координаты клетки
        local start_x, start_y = aux.deHashKey(key)
        local ix, iy = start_x, start_y

        while not aux.grid[iy][ix].visited do  -- Ходим, пока не найдем относящуюся к дереву клетку
            local dir = aux.dirs[math.random(1, 4)]
            local isMoved = false

            key = aux.hashKey(ix, iy)

            if dir == "UP" and iy-1 >= aux.sy then iy = iy - 1 isMoved = true
            elseif dir == "DOWN" and iy+1 <= aux.height then iy = iy + 1 isMoved = true
            elseif dir == "LEFT" and ix-1 >= aux.sx then ix = ix - 1 isMoved = true
            elseif dir == "RIGHT" and ix+1 <= aux.width then ix = ix + 1 isMoved = true end

            if isMoved then -- Если мы можем двигаться, тогда проверяем на циклы
                if dsHash[key] then -- Удаление циклов
                    dirsStack[dsHash[key]].dir = dir

                    for i = dsHash[key]+1, dsSize do
                        local x, y = aux.deHashKey(dirsStack[i].hashref)
                        dsHash[dirsStack[i].hashref] = nil
                        dirsStack[i] = nil
                        dsSize = dsSize - 1
                    end
                else
                    local x, y = aux.deHashKey(key) -- Добавление в стак направлений
                    dsSize = dsSize + 1
                    dsHash[key] = dsSize
                    dirsStack[dsSize] = {dir = dir, hashref = key}
                end
            end

        end

        for i = 1, dsSize do -- Проквапывание пути
            aux.grid[start_y][start_x].visited = true
            cellsHash[aux.hashKey(start_x, start_y)] = nil
            aux.grid[start_y][start_x].point = false
            local dir = dirsStack[i].dir

            if dir == "UP" then
                aux.grid[start_y-1][start_x].bottom_wall = false
                start_y = start_y - 1

            elseif dir == "DOWN" then
                aux.grid[start_y][start_x].bottom_wall = false
                start_y = start_y + 1

            elseif dir == "LEFT" then
                aux.grid[start_y][start_x-1].right_wall = false
                start_x = start_x - 1

            elseif dir == "RIGHT" then
                aux.grid[start_y][start_x].right_wall = false
                start_x = start_x + 1
            end
        end

        dsHash, dirsStack, dsSize = {}, {}, 0 -- Обнуление стака направлений
    end
end
---
--- Generated by Luanalysis
--- Created by ofeerist.
--- DateTime: 18.02.2023 1:14
---
---
gridScale = 1000
semiGridScale = gridScale / 2
calibration = 300

gridWidth = 0
gridHeight = 0

function CreateMaze(width, height)
    grid = createMaze(1, 1, width, height, false)

    gridWidth = width
    gridHeight = height

    for x = 1, width do
        for y = 1, height do

            -- Main Walls

            if (grid[x][y].bottom_wall) then
                CreateWall(x * gridScale, y * gridScale - semiGridScale, 0)
                CreateWall(x * gridScale, y * gridScale, 0)
                CreateWall(x * gridScale, y * gridScale - gridScale, 0)
            else
                CreateGate(x * gridScale, y * gridScale - semiGridScale, 0)
                --CreateBocchiTheRock(x * gridScale, y * gridScale - semiGridScale - calibration, 90)
                --CreateBocchiTheRock(x * gridScale, y * gridScale - semiGridScale + calibration, 90)
            end
            if (grid[x][y].right_wall) then
                CreateWall(x * gridScale - semiGridScale, y * gridScale, 90)
                CreateWall(x * gridScale, y * gridScale, 90)
                CreateWall(x * gridScale - gridScale, y * gridScale, 90)
            else
                CreateGate(x * gridScale - semiGridScale, y * gridScale, 90)
                --CreateBocchiTheRock(x * gridScale - semiGridScale - calibration, y * gridScale, 90)
                --CreateBocchiTheRock(x * gridScale - semiGridScale + calibration, y * gridScale, 90)
            end
            if x == 1 then
                CreateWall(x * gridScale - gridScale, y * gridScale - semiGridScale, 0)
                CreateWall(x * gridScale - gridScale, y * gridScale, 0)
                CreateWall(x * gridScale - gridScale, y * gridScale - gridScale, 0)
            end
            if y == 1 then
                CreateWall(x * gridScale - semiGridScale, y * gridScale - gridScale, 90)
                CreateWall(x * gridScale, y * gridScale - gridScale, 90)
                CreateWall(x * gridScale - gridScale, y * gridScale - gridScale, 90)
            end
        end
    end

    RoomFill(grid)
end

function CreateWall(x, y, face)
    table.insert(objectsCreated,
        CreateDestructable( FourCC('LTbr'), x - semiWidth, y - semiWidth, face, 1, 0))
end
function CreateGate(x, y, face)
    table.insert(objectsCreated,
            CreateDestructable( FourCC('YTcx'), x - semiWidth, y - semiWidth, face, 1, 0))
end
function CreateBocchiTheRock(x, y, face)
    table.insert(objectsCreated,
            CreateDestructable( FourCC('LTbx'), x - semiWidth, y - semiWidth, face, 1, 0))
end
function CreateCorner(x, y, face)
    table.insert(objectsCreated,
            CreateDestructable( FourCC('LTbs'), x - semiWidth, y - semiWidth, face, 1, 0))
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 23:01
---

function MovePlayerToStart(player)
    if (playerUnits[GetPlayerId(player)] == nil) then return end

    SetUnitPositionLoc(playerUnits[GetPlayerId(player)], GetRandomLocInRect(gg_rct_PlayerStart))
    SetCameraPositionForPlayer(player, GetUnitX(playerUnits[GetPlayerId(player)]), GetUnitY(playerUnits[GetPlayerId(player)]))
    SelectUnitAddForPlayer(playerUnits[GetPlayerId(player)], player)
end
---
--- Generated by Luanalysis
--- Created by ofeerist.
--- DateTime: 18.02.2023 1:05
---
local realTimerStart = TimerStart
TimerStart = function(timer, duration, repeating, callback)
    local pcallback = function()
        if callback == nil then return end
        local status, err = pcall(callback)
        if not status then
            print(err)
        end
    end
    realTimerStart(timer, duration, repeating, pcallback)
end

local realTriggerAddAction = TriggerAddAction
TriggerAddAction = function(trig, callback)
    local pcallback = function()
        local status, err = pcall(callback)
        if not status then
            print(err)
        end
    end
    realTriggerAddAction(trig, pcallback)
end

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 19.02.2023 15:43
---
function PlayerDeathStart()
    local trigger = CreateTrigger()
    TriggerRegisterAnyUnitEventBJ(trigger, EVENT_PLAYER_UNIT_DEATH)
    TriggerAddAction(trigger, function()
        for i = 0, #playerUnits do
            if (GetTriggerUnit() == playerUnits[i]) then
                local player = GetOwningPlayer(GetTriggerUnit())
                CreateNextUnit(player, currentEvolution[GetPlayerId(player)])
                MovePlayerToStart(player)

                DisplayMessageToAll(GetPlayerName(player) .. " погиб в подземелье...", 10)
            end
        end
    end)
end

function DisplayMessageToAll(text, duration)
    for i = 0, 10 do
        DisplayTimedTextToPlayer(Player(i), 0, 0, duration, text)
    end
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 19:19
---
---
playerUnits = {}
playerChooses = {}
playerChoosed = 0
function CreatePlayer(p)
    local dialog = DialogCreate()
    local alliance = DialogAddButton(dialog, "Люди", 0)
    --local orc = DialogAddButton(dialog, "Орки", 0)

    DialogDisplay(Player(p), dialog, true)

    local allianceButton = CreateTrigger()
    TriggerRegisterDialogButtonEvent(allianceButton, alliance)

    --local orcButton = CreateTrigger()
    --TriggerRegisterDialogButtonEvent(orcButton, orc)

    TriggerAddAction(allianceButton, AllianceChoose)
    --TriggerAddAction(orcButton, OrcChoose)
end

function AllianceChoose()
    local id = GetPlayerId(GetTriggerPlayer())
    playerChooses[id] = "1"

    playerChoosed = playerChoosed + 1

    playerUnits[GetPlayerId(GetTriggerPlayer())] = CreateUnit(GetTriggerPlayer(), FourCC('hpea'), 0, 0, 0)
    currentEvolution[GetPlayerId(GetTriggerPlayer())] = 'hpea'

    MovePlayerToStart(GetTriggerPlayer())
end

function OrcChoose()
    local id = GetPlayerId(GetTriggerPlayer())
    playerChooses[id] = "2"

    playerChoosed = playerChoosed + 1

    playerUnits[GetPlayerId(GetTriggerPlayer())] = CreateUnit(GetTriggerPlayer(), FourCC('opeo'), 0, 0, 0)
    currentEvolution[GetPlayerId(GetTriggerPlayer())] = 'opeo'

    MovePlayerToStart(GetTriggerPlayer())
end

function GameStart()
    CreateMaze(database[currentLevel].gridSize , database[currentLevel].gridSize)
    PlaySound("Sound/Interface/CreepAggroWhat1.flac")
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 17:30
---
pi = 3.14
function GetRandomRealOutsideCircleInSquare(centerX, centerY, width, radius)
    rx = -width + 2*width*GetRandomReal(0, 1);

    if (rx<-radius or rx>radius)  then
        ry = -width + 2*width*GetRandomReal(0, 1);
    else
        rand_inst = GetRandomReal(0, 1);
        if(rand_inst<0.5)  then
            ry = -width + 2*(width-math.sqrt(radius^2-rx^2))*rand_inst;
        else
            ry = (math.sqrt(radius^2-rx^2) - (width-math.sqrt(radius^2-rx^2)) ) + 2*(width-math.sqrt(radius^2-rx^2))*rand_inst;
        end
    end

    return {x = centerX + rx, y = centerY + ry}
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 21:23
---
objectsCreated = {}
unitCreated = {}

function ShowEndDialog()
    if (not (GetOwningPlayer(GetTriggerUnit()) == mainPlayer)) then return end
    
    local dialog = DialogCreate()
    DialogSetMessage(dialog, "Закончить этаж?")
    local yes = DialogAddButton(dialog, "Да", 0)
    local no = DialogAddButton(dialog, "Нет", 0)

    DialogDisplay(mainPlayer, dialog, true)

    local yesTrigger = CreateTrigger()
    TriggerRegisterDialogButtonEvent(yesTrigger, yes)

    TriggerAddAction(yesTrigger, EndLevel)
end

function EndLevel()

    DropOnKillDestroy()

    for i = 1, #objectsCreated do
        RemoveDestructable(objectsCreated[i])
    end
    for i = 1, #unitCreated do
        RemoveUnit(unitCreated[i])
    end
    for i = 1, #itemsCreated do
        if (not IsItemOwned(itemsCreated[i])) then
            RemoveItem(itemsCreated[i])
        end
    end
    for i = 1, #triggersCreated do
        --if (not triggersCreated[i] == nil) then
            DestroyTrigger(triggersCreated[i])
        --end
    end


    DropOnKillStart()

    for i = 0, GetPlayers() do
        if (i > 4) then break end

        MovePlayerToStart(Player(i))
        NextEvolution(Player(i))
    end

    for i = 0, 3 do
        SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD) + database[currentLevel].gold)
        SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_LUMBER) + database[currentLevel].wood)
    end

    currentLevel = currentLevel + 1

    if (currentLevel >= #database) then
        WinTimer()
    end

    PlaySound("UI/Feedback/CheckpointPopup/QuestCheckpoint.flac")
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 13:20
---

triggersCreated = {}

function RoomFill(grid)
    for x = 1, gridWidth do
        for y = 1, gridHeight do
            center = {x = x * gridScale - semiGridScale, y = y * gridScale - semiGridScale}

            if (x == gridWidth and y == gridHeight) then
                CreateExit(center)

                goto continue
            end

            if (x == 1 and y == 1) then

                for p = 0, GetPlayers() do
                    SetUnitPosition(playerUnits[p], center.x  - semiWidth, center.y  - semiWidth)
                    SetCameraPositionForPlayer(Player(p), GetUnitX(playerUnits[p]), GetUnitY(playerUnits[p]))
                end

                goto continue
            end

            room = GetRandomInt(0, 10)

            -- Treasure Room
            if (room >= 0 and room <= 3) then
                rnd = GetRandomInt(0, 1)
                if (rnd == 0) then
                    CreateLowTreasureRoom(center)
                end
                if (rnd == 1) then
                    CreateMediumTreasureRoom(center)
                end
            end

            -- Unique Event Room
            if (room > 3 and room < 5) then
                rnd = GetRandomInt(0, 1)
                if (rnd == 0) then
                    CreateWell(center)
                end
                if (rnd == 1) then
                    CreatePig(center)
                end
            end

            -- Enemy Room

            if (room >= 5) then

                rnd = GetRandomInt(0, 1)

                if (rnd == 0) then
                    CreateBanditRoom(center)
                end
                if (rnd == 1) then
                    CreateAltar(center)
                end

            end

            ::continue::
        end
    end
end

function CreateFiller(raw, x, y, face, variation, scale)
    if (scale == nil) then scale = 1 end

    local dest = CreateDestructable( FourCC(raw), x - semiWidth, y - semiWidth, face, scale, variation)

    table.insert(objectsCreated, dest)
    TriggerRegisterDeathEvent(dropTrigger, dest)
end

function CreateWell(center)
    CreateFiller('B00A', center.x, center.y, 0, 1)
    local trigger = CreateTrigger()
    TriggerRegisterEnterRectSimple(trigger, Rect(center.x - semiGridScale / 2 - semiWidth, center.y - semiGridScale / 2 - semiWidth,
            center.x + semiGridScale / 2 - semiWidth, center.y + semiGridScale / 2 - semiWidth))
    TriggerAddAction(trigger, function()
        SetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE, BlzGetUnitMaxHP(GetTriggerUnit()))
        DestroyTrigger(trigger)
    end)

    table.insert(triggersCreated, trigger)
end

function CreatePig(center)
    CreateFiller('B00B', center.x, center.y, 0, 1)
    local trigger = CreateTrigger()
    TriggerRegisterEnterRectSimple(trigger, Rect(center.x - semiGridScale / 2 - semiWidth, center.y - semiGridScale / 2 - semiWidth,
            center.x + semiGridScale / 2 - semiWidth, center.y + semiGridScale / 2 - semiWidth))
    TriggerAddAction(trigger, function()
        SetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE, BlzGetUnitMaxHP(GetTriggerUnit()))
        SetUnitState(GetTriggerUnit(), UNIT_STATE_MANA, BlzGetUnitMaxMana(GetTriggerUnit()))
        DestroyTrigger(trigger)
    end)

    table.insert(triggersCreated, trigger)
end

function CreateAltar(center)
    size = GetRandomInt(5, 10)

    for i = 1, size do

        position =
        GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale - 128, semiGridScale / 2.5)

        CreateFiller('B00C',
                position.x,
                position.y,
                GetRandomReal(0, 360), GetRandomInt(0, 2))
    end

    CreateFiller('B00D', center.x, center.y, 0, 1)
    local trigger = CreateTrigger()
    TriggerRegisterEnterRectSimple(trigger, Rect(center.x - semiGridScale / 2 - semiWidth, center.y - semiGridScale / 2 - semiWidth,
            center.x + semiGridScale / 2 - semiWidth, center.y + semiGridScale / 2 - semiWidth))
    TriggerAddAction(trigger, function()
        SetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE, BlzGetUnitMaxHP(GetTriggerUnit()))
        SetUnitState(GetTriggerUnit(), UNIT_STATE_MANA, BlzGetUnitMaxMana(GetTriggerUnit()))

        groupNum = GetRandomInt(1, #database[currentLevel].altar)
        for i = 1, #database[currentLevel].altar[groupNum] do
            size = GetRandomInt(database[currentLevel].altar[groupNum][i].min, database[currentLevel].altar[groupNum][i].max)
            for j = 1, size do
                local pos = {x = GetRandomReal(center.x - semiGridScale, center.x + semiGridScale),
                             y = GetRandomReal(center.y - semiGridScale, center.y + semiGridScale)}
                table.insert(unitCreated,
                        CreateUnit(Player(11), FourCC(database[currentLevel].bandits[groupNum][i].id), pos.x  - semiWidth, pos.y  - semiWidth, 0))
            end
        end

        DestroyTrigger(trigger)
    end)

    table.insert(triggersCreated, trigger)
end

function CreateLowTreasureRoom(center)
    size = GetRandomInt(5, 10)

    for i = 1, size do

        position =
        GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale - 128, semiGridScale / 2.5)

        CreateFiller('LTcr',
                position.x,
                position.y,
                GetRandomReal(0, 360), GetRandomInt(0, 2))
    end

    size = GetRandomInt(1, 2)

    for i = 1, size do

        position =
        GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale - 128, semiGridScale / 2.5)

        CreateFiller('B002', position.x, position.y, GetRandomReal(0, 360),
                GetRandomInt(0, 2), 1)
    end

    size = GetRandomInt(2, 5)

    for i = 1, size do

        position =
        GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale - 128, semiGridScale / 2.5)

        CreateFiller('B005', position.x, position.y, GetRandomReal(0, 360),
                1, 1)
    end

    rnd = GetRandomInt(0, 5)
    if (rnd == 0) then
        CreateFiller('B009', center.x, center.y, GetRandomReal(0, 360),
                1, GetRandomReal(1, 1))
    end
    if (rnd == 1) then
        CreateFiller('B008', center.x, center.y, GetRandomReal(0, 360),
                1, GetRandomReal(1, 1))
    end
    if (rnd > 1) then
        CreateFiller('B004', center.x, center.y, GetRandomReal(0, 360),
                1, GetRandomReal(1.5, 2))
    end

end

function CreateMediumTreasureRoom(center)
    size = GetRandomInt(2, 5)

    for i = 1, size do

        position =
        GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale - 128, semiGridScale / 2.5)

        CreateFiller('B003',
                position.x,
                position.y,
                GetRandomReal(0, 360), GetRandomInt(0, 2))
    end

    size = GetRandomInt(5, 10)

    for i = 1, size do

        position =
        GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale - 128, semiGridScale / 2.5)

        CreateFiller('B000', position.x, position.y, GetRandomReal(0, 360),
                GetRandomInt(0, 5), 1.5)
    end

    -- chest

    rnd = GetRandomInt(0, 5)
    if (rnd == 0) then
        CreateFiller('B006', center.x, center.y, GetRandomReal(0, 360),
                1, GetRandomReal(1, 1))
    end
    if (rnd == 1) then
        CreateFiller('B007', center.x, center.y, GetRandomReal(0, 360),
                1, GetRandomReal(1, 1))
    end
    if (rnd > 1) then
        CreateFiller('B001', center.x, center.y, GetRandomReal(0, 360),
                1, GetRandomReal(1.5, 2))
    end

end

function CreateBanditRoom(center)
    size = GetRandomInt(5, 20)

    for i = 1, size do
        position =
            GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale, semiGridScale / 2)

        angle = AngleBetweenXY(position.x, position.y, center.x, center.y) / bj_DEGTORAD

        table.insert(unitCreated,
                CreateUnit(Player(11), FourCC('hhou'), position.x  - semiWidth, position.y  - semiWidth, angle))
    end

    size = GetRandomInt(0, 3)

    for i = 1, size do
        position =
            GetRandomRealOutsideCircleInSquare(center.x, center.y, semiGridScale, semiGridScale / 2)

        angle = AngleBetweenXY(position.x, position.y, center.x, center.y) / bj_DEGTORAD

        CreateFiller('LOcg',
                position.x, position.y, angle, GetRandomInt(0, 2))
    end

    groupNum = GetRandomInt(1, #database[currentLevel].bandits)
    for i = 1, #database[currentLevel].bandits[groupNum] do
        size = GetRandomInt(database[currentLevel].bandits[groupNum][i].min, database[currentLevel].bandits[groupNum][i].max)
        for j = 1, size do
            local pos = {x = GetRandomReal(center.x - semiGridScale, center.x + semiGridScale),
                         y = GetRandomReal(center.y - semiGridScale, center.y + semiGridScale)}
            table.insert(unitCreated,
                    CreateUnit(Player(11), FourCC(database[currentLevel].bandits[groupNum][i].id), pos.x  - semiWidth, pos.y  - semiWidth, 0))
        end
    end
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ofeerist.
--- DateTime: 18.02.2023 0:23
---
do
    local InitGlobalsOrigin = InitGlobals
    semiWidth = 0

    mainPlayer = nil
    currentLevel = 1

    players = 0

    function InitGlobals()
        InitGlobalsOrigin()
        TimerStart(CreateTimer(), .01, false, function()
            DestroyTimer(GetExpiredTimer())

            semiWidth = GetRectWidthBJ(GetWorldBounds()) / 4

            for i = 0, GetPlayers() do
                if (IsPlayerSlotState(Player(i), PLAYER_SLOT_STATE_PLAYING)) then
                    mainPlayer = Player(i)
                    break
                end
            end

            for i = 0, GetPlayers() do
                if (IsPlayerSlotState(Player(i), PLAYER_SLOT_STATE_PLAYING)) then
                    players = players + 1
                end
            end

            for i = 0, GetPlayers() do
                CreatePlayer(i)
            end

            players = players - 1

            LobbyStart()
            DropOnKillStart()
            PlayerDeathStart()
            DungeonTimerStart()

            SetPlayerState(Player(11), PLAYER_STATE_GOLD_GATHERED, 9999999)

            PlaySound("Sound/Interface/GameFound.flac")
        end)
    end
end
--CUSTOM_CODE
function InitUpgrades_Player0()
SetPlayerTechResearched(Player(0), FourCC("Rome"), 2)
SetPlayerTechResearched(Player(0), FourCC("Ropg"), 1)
end

function InitUpgrades_Player1()
SetPlayerTechResearched(Player(1), FourCC("Ropg"), 1)
end

function InitUpgrades_Player2()
SetPlayerTechResearched(Player(2), FourCC("Ropg"), 1)
SetPlayerTechResearched(Player(2), FourCC("Roar"), 1)
end

function InitUpgrades_Player3()
SetPlayerTechResearched(Player(3), FourCC("Ropg"), 1)
end

function InitUpgrades()
InitUpgrades_Player0()
InitUpgrades_Player1()
InitUpgrades_Player2()
InitUpgrades_Player3()
end

function InitCustomPlayerSlots()
SetPlayerStartLocation(Player(0), 0)
SetPlayerColor(Player(0), ConvertPlayerColor(0))
SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
SetPlayerRaceSelectable(Player(0), true)
SetPlayerController(Player(0), MAP_CONTROL_USER)
SetPlayerStartLocation(Player(1), 1)
SetPlayerColor(Player(1), ConvertPlayerColor(1))
SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
SetPlayerRaceSelectable(Player(1), true)
SetPlayerController(Player(1), MAP_CONTROL_USER)
SetPlayerStartLocation(Player(2), 2)
SetPlayerColor(Player(2), ConvertPlayerColor(2))
SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
SetPlayerRaceSelectable(Player(2), true)
SetPlayerController(Player(2), MAP_CONTROL_USER)
SetPlayerStartLocation(Player(3), 3)
SetPlayerColor(Player(3), ConvertPlayerColor(3))
SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
SetPlayerRaceSelectable(Player(3), true)
SetPlayerController(Player(3), MAP_CONTROL_USER)
SetPlayerStartLocation(Player(11), 4)
SetPlayerColor(Player(11), ConvertPlayerColor(11))
SetPlayerRacePreference(Player(11), RACE_PREF_UNDEAD)
SetPlayerRaceSelectable(Player(11), true)
SetPlayerController(Player(11), MAP_CONTROL_COMPUTER)
end

function InitCustomTeams()
SetPlayerTeam(Player(0), 0)
SetPlayerTeam(Player(1), 0)
SetPlayerTeam(Player(2), 0)
SetPlayerTeam(Player(3), 0)
SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
SetPlayerAllianceStateVisionBJ(Player(0), Player(3), true)
SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
SetPlayerAllianceStateVisionBJ(Player(1), Player(3), true)
SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
SetPlayerAllianceStateVisionBJ(Player(2), Player(3), true)
SetPlayerAllianceStateVisionBJ(Player(3), Player(0), true)
SetPlayerAllianceStateVisionBJ(Player(3), Player(1), true)
SetPlayerAllianceStateVisionBJ(Player(3), Player(2), true)
SetPlayerTeam(Player(11), 1)
end

function InitAllyPriorities()
SetStartLocPrioCount(0, 3)
SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_LOW)
SetStartLocPrioCount(1, 1)
SetStartLocPrio(1, 0, 2, MAP_LOC_PRIO_HIGH)
SetStartLocPrioCount(2, 2)
SetStartLocPrio(2, 0, 1, MAP_LOC_PRIO_HIGH)
SetStartLocPrio(2, 1, 3, MAP_LOC_PRIO_HIGH)
SetStartLocPrioCount(3, 1)
SetStartLocPrio(3, 0, 2, MAP_LOC_PRIO_HIGH)
SetEnemyStartLocPrioCount(4, 1)
SetEnemyStartLocPrio(4, 0, 1, MAP_LOC_PRIO_HIGH)
end

function main()
SetCameraBounds(-4096.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -4096.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 12288.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 12288.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -4096.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 12288.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 12288.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -4096.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
SetDayNightModels("Environment\\DNC\\DNCDalaran\\DNCDalaranTerrain\\DNCDalaranTerrain.mdl", "Environment\\DNC\\DNCDalaran\\DNCDalaranUnit\\DNCDalaranUnit.mdl")
SetTerrainFogEx(0, 3000.0, 5000.0, 0.500, 0.000, 0.000, 0.000)
NewSoundEnvironment("Default")
SetAmbientDaySound("DalaranRuinsDay")
SetAmbientNightSound("DalaranRuinsNight")
SetMapMusic("Music", true, 0)
InitSounds()
CreateRegions()
InitUpgrades()
CreateAllUnits()
InitBlizzard()
InitGlobals()
end

function config()
SetMapName("TRIGSTR_001")
SetMapDescription("TRIGSTR_003")
SetPlayers(5)
SetTeams(5)
SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
DefineStartLocation(0, -576.0, -1728.0)
DefineStartLocation(1, -1152.0, 8640.0)
DefineStartLocation(2, 3520.0, 6400.0)
DefineStartLocation(3, 9920.0, 6336.0)
DefineStartLocation(4, -1280.0, 5696.0)
InitCustomPlayerSlots()
InitCustomTeams()
InitAllyPriorities()
end

